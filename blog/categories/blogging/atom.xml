<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blogging | Vladimir Tsvetkov]]></title>
  <link href="http://npacemo.github.io/blog/categories/blogging/atom.xml" rel="self"/>
  <link href="http://npacemo.github.io/"/>
  <updated>2015-08-10T18:40:44+03:00</updated>
  <id>http://npacemo.github.io/</id>
  <author>
    <name><![CDATA[Vladimir Tsvetkov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building the Obecto Technology Radar]]></title>
    <link href="http://npacemo.github.io/blog/2014/04/30/building-the-obecto-technology-radar/"/>
    <updated>2014-04-30T17:01:38+03:00</updated>
    <id>http://npacemo.github.io/blog/2014/04/30/building-the-obecto-technology-radar</id>
    <content type="html"><![CDATA[<p>We started <a href="http://obecto.com" title="My Company">Obecto</a> at the fall of 2008. During the period of 2007-2012, I was particularly focused on growing my company&rsquo;s Flex expertise <em>(including mine)</em>. For those that never heard of Flex, this is a front-end technology developed by Adobe. It&rsquo;s comprised of a set of <strong>programming languages</strong> (ActionScript 3 and MXML), a <strong>byte-code execution environment</strong> (Flash &amp; AIR) and a very mature set of quite sophisticated <strong>SDK and frameworks</strong> (Eclipse-base IDE, debugger, profiler, Cairngorm, Parsley, RobotMVC, etc.) As we were growing our expertise we had our share of contributions to the open source community, namely the <a href="https://code.google.com/p/flit/" title="FLit - a lightweight Flex for Flash Apps">FLit framework &mdash; a light-weight Flex for Flash Applications</a>. Our reputation grew to a point where the Bulgarian division of VMware contracted us to train over 80 of their finest engineers. We also taught a significant part of a Flex university course at the <em>Sofia University</em>&hellip;</p>

<blockquote><p><cite>My point is, we become so damn good at Flex/Flash, and the technology was so powerful <em>(even now the most popular Javascript framework are still not providing the same capabilities and productivity)</em>, that our hubris blinded us from seeing the bigger picture in the technology world despite all of the signs <em>(e.g. the total lack of support of Flash on the iOS devices and mobile in general)</em>&hellip;</cite></p></blockquote>

<!-- more -->


<p>Flex was the answer to all of our needs &mdash; current and future &mdash; you name it: complex web applications, desktop applications and even a viable alternative to native mobile. Despite the unprecedented productivity and technology capabilities of Flex allowing the development of mind-blowing user interactions and user experiences, this technology was very quickly in decline. And it suddenly vanished one day, leaving my company with a portfolio of impressive projects done with a dead technology. We had to start basically from scratch to develop a new expertise, and build a new portfolio respectively, that will set us apart and beyond the average software development studio. It took us almost 2 years to regain expertise and build up our portfolio.</p>

<blockquote><p><cite>That thought us an important lesson! Technology companies need a process to continuously assess new technology and discuss potential future directions, while at the same time maintain sharp focus at the technologies offered as main platform choices to their customers.</cite></p></blockquote>

<p>As part of such process, at <a href="http://obecto.com" title="My Company">Obecto</a>, we decided to use a tool called <strong>Technology Radar</strong>. For those readers, unfamiliar with this tool and his concepts, I suggest reading <a href="http://nealford.com/memeagora/2013/05/28/build_your_own_technology_radar.html" title="Build Your Own Technology Radar">Build Your Own Technology Radar</a> <em>by Neil Ford</em>. The <em>radar</em> as <a href="http://www.thoughtworks.com/" title="ThoughtWorks corporate site">ThoughtWorks</a>, the company that invented it, defines it is:</p>

<blockquote><p><cite>&hellip;a document that sets out the changes that we think are currently interesting in software development &ndash; things in motion that we think you should pay attention to and consider using in your projects. It reflects the idiosyncratic opinion of a bunch of senior technologists based on our day-to-day work and experiences.<br/>
&mdash;&ndash; <strong>ThoughtWorks</strong>, <a href="http://www.thoughtworks.com/radar/faq" title="ThoughtWorks -- Technology Radar FAQ">Technology Radar &ndash; FAQ</a> </cite></p></blockquote>

<p>So let me present you the first version of the Obecto technology radar:</p>

<div class="screenshot">
<img src="https://farm1.staticflickr.com/442/20456936485_17a922efe2_o.png" width="640" height="640" title="Obecto Tech. Radar - April 2014" >
</div>


<p>The first edition of our radar marks few important moments:</p>

<ul>
<li><strong>Flash/Flex</strong> &ndash; our departure from Flex/Flash has finished and it has deserved its honourable place in the graveyard of good technologies. Nonetheless, we&rsquo;re still continuing to support a couple of AIR desktop applications for the pharmaceutical industry.</li>
<li><strong>Spring-Roo</strong> &ndash; even though <em>spring-roo</em> has saved us numerous hours of coding by generating the boilerplate and necessary plumbing for us, it has reached a point where projects that are using <em>spring-roo</em> are very difficult to maintain as tooling. The tooling behaves inconsistently across different versions and especially when combined with <strong>Eclipse STS</strong>. The <strong>Spring frameworks</strong> had matured to a level where we no longer need <em>spring-roo</em>. No new projects will be started with <em>spring-roo</em> and there&rsquo;s an undergoing initiative to get rid of <em>spring-roo</em> from all active projects. We expect to complete this effort until the end of 2014. It&rsquo;ll certainly be reflected on the coming editions of the radar.</li>
<li><strong>Angular.JS</strong> &ndash; now that we no longer rely on the use of <em>Flex/Flash</em> for building web applications, we have adopted <em>Dojo 1.8</em> as one of our core technologies for building SPA <em>(Single Page Applications)</em>. Since the beginning of the year we have spotted <em>Angular.JS</em> as a better alternative to <em>Dojo</em> and we&rsquo;re in a process of active adoption. All new web application projects are using <em>Angular.JS</em> and we expect it to be fully adopted in the coming quarters.</li>
<li><strong>JSP/JSF</strong> &ndash; using server-side generated pages still has its place in certain solutions. But the JSF technology is not intended to be the most performing web technology. Also as an enterprise technology it relies on a sufficient hardware. There is always some room for performance optimization, but regardless of performance there are certain limitations when trying to implement more sophisticated interaction design and UX, such as applying the <strong>mobile-first</strong> technique.</li>
<li><strong>Node.js</strong> &ndash; after few successful pilot projects, we truly believe in the pursuit of a <strong>full Javascript</strong> technology stack. One programming language used across all application layers. With some rough edges for operations, it is time to put <em>Node.js</em> through a trial of several bit more complex projects.</li>
</ul>


<p>Don&rsquo;t hesitate to contact me if you have questions regarding any dot on the Obecto tech. radar.</p>

<p>Keep in mind, this is a <strong>no comments</strong>-type of blog, because <a href="http://vladi.io/blog/2014/01/07/switching-off-comments/" title="Switching Off Comments">there are better ways to respond</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Switching Off Comments]]></title>
    <link href="http://npacemo.github.io/blog/2014/01/07/switching-off-comments/"/>
    <updated>2014-01-07T22:56:33+02:00</updated>
    <id>http://npacemo.github.io/blog/2014/01/07/switching-off-comments</id>
    <content type="html"><![CDATA[<blockquote><p><cite>Anonymous blog comments, vapid video pranks, and lightweight mashups may seem trivial and harmless, but as a whole, this widespread practice of fragmentary, impersonal communication has demeaned interpersonal interaction.<br/>
&mdash;&ndash; <strong>Jason Lanier</strong>, You are not a Gadget. A Manifesto.</cite></p></blockquote>

<p>I realize I have never questioned the necessity of having a comments form in a blog. Somehow comments have always been inseparable part of my understanding of the concept of a blog. I hated the blogs and posts that had their comments disabled even though I leave comments rarely. When I&rsquo;ve started setting up this <a href="http://octopress.org/" title="Octopress - A blogging framework for hackers">Octopress</a> blog <strong><em>not using</em></strong> <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> was out of the question. Every blogger loves comments. Presumably they provide the reader with an almost instantaneous connection with the author and vice versa. And you&rsquo;re getting this emotional boost every time you receive an encouraging response. And the more comments I got the better I felt. So what changed my mind about comments&hellip;</p>

<!-- more -->


<p>It started with an annoying technical issue. As of time of writing <em>(Jan 8, 2014)</em> the <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> comments widgets was causing Google Chrome browsers on Mac OS X to freeze when attempting to load my blog <em>(and in fact any blog with a <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> widget on it)</em> due to a browser-specific security constraint. If I wasn&rsquo;t that obsessive compulsive about having a consistently working blog on the major browsers I might have been able to live with that. But I imagined the situation of opening something in my favorite browser <em>(which is Firefox currently)</em> and getting a 100% reproducible freeze. I don&rsquo;t think I will open it again. That&rsquo;s a scary thought &ndash; to loose a reader because of a darn technical issue. So I had to switch off comments.</p>

<p>I felt really bad about this decision, so I had to fabricate some additional rational reasons. To my surprise these <em>additional reasons</em> were already adopted on a certain non-verbal level in my mind and I had to just step on it to put it in words. The more I think and I write about that, the more comfortable I feel about this decision. I&rsquo;m letting go of this juvenile desire for approval by the crowd and I no longer need to use my comments count as a social currency and quantification of the quality of my blog.</p>

<h2>The reasoning against comments</h2>

<ol>
<li><strong>Anonymity.</strong> I don&rsquo;t understand why would someone post anonymously unless being really in danger. Instead people use anonymity to detach the nasty things they type on their keyboards from their identity. It&rsquo;s defacing the conversation and stimulates behavior I don&rsquo;t want to be part of.</li>
<li><strong>Inarticulate responses.</strong> Comments rarely are the place where you can read a response that has took days or even an hour of reflection before the responder formulates his words. Usually, they express a basic primary reaction. It&rsquo;s like a shout in a room full of people. It doesn&rsquo;t contribute much to the presented material and it&rsquo;s a relatively poor attempt at establishing a connection. I&rsquo;m longing for a deeper relationship. Take for example the way the life-long conversation between Carl Jung and Sigmund Freud was depicted in <a href="http://www.imdb.com/title/tt1571222/" title="A Dangerous Method (2011) - IMDb">A Dangerous Method (2011)</a>. I&rsquo;ve been fascinated by the intensity and especially the civility and great mutual respect in this relationship. I&rsquo;m sure I&rsquo;ll be able to find many such examples where great minds have been able to keep alive a correspondence of enormous value and beauty, but this rarely happens in the form of exchanging few comments at the bottom part of a blog post.</li>
<li><strong>Unproductive controversy.</strong> I don&rsquo;t mind someone expressing a strong disagreement. Sometimes titles are designed to be provocative. But I do mind against controversy in the lines of Mac vs. PC, C# vs. Java, OOP vs. Functional, Vim vs. Emacs, Comments Off vs. Comments On etc. Often <em>(but not always)</em> such controversy is unproductive and shallow.</li>
<li><strong>The need for moderation.</strong> Moderation is an overhead activity that I would be happy not to do. Keeping the comments clean of spam and irrelevant comments is a distractive task I want to avoid.</li>
</ol>


<h2>Better ways to respond</h2>

<p>Switching off comments doesn&rsquo;t mean I want to prevent any kind of conversation happening. On the contrary, I want the conversations to be deeper, more personal instead of fragmentary and impersonal.</p>

<p>In case you have read a post here and you want to reply, you can do the following:</p>

<ol>
<li><strong>Blog about it.</strong> Writing is tough. Finding the right words is tough. But when the magic happens, the effects of a good blog post could pay you back in the long-term. Please, don&rsquo;t forget to let me know about your post. You can do this via email or a tweet.</li>
<li><strong>Reply on Twitter.</strong> You can either use the &lsquo;Tweet&rsquo;-button at the bottom of an article, or tweet to <a href="http://twitter.com/npacemo" title="Follow me on Twitter">my Twitter account (@npacemo)</a>.</li>
<li><strong>Email me.</strong> You can find my contacts on the <a href="/about" title="About Vladimir Tsvetkov">About</a> page.</li>
</ol>


<p>Let&rsquo;s push it harder for some next level conversations!</p>
]]></content>
  </entry>
  
</feed>
