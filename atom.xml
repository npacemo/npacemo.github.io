<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Vladimir Tsvetkov]]></title>
  <link href="http://npacemo.github.io/atom.xml" rel="self"/>
  <link href="http://npacemo.github.io/"/>
  <updated>2015-10-15T16:14:24+03:00</updated>
  <id>http://npacemo.github.io/</id>
  <author>
	<name><![CDATA[Vladimir Tsvetkov]]></name>
	
  </author>
  <generator uri="http://octopress.org/">Proudly Powered by Octopress</generator>

  
  <entry>
	<title type="html"><![CDATA[Obecto Tech Radar - November 2014]]></title>
	<link href="http://npacemo.github.io/blog/2014/12/03/obecto-tech-radar-november-2014/"/>
	<updated>2014-12-03T11:18:37+02:00</updated>
	<id>http://npacemo.github.io/blog/2014/12/03/obecto-tech-radar-november-2014</id>
	<content type="html"><![CDATA[<p>The November 2014 edition of our <strong>technocalogy radar</strong> is the second edition of the <a href="http://obecto.com" title="My Company">Obecto</a> radar.</p>

<p>It marks few important moments for our organisation:</p>

<ul>
<li><strong>Angular &amp; Dojo 1.8</strong> &ndash; we consider Angular fully adopted and a fine substitute for our previous choice Dojo.</li>
<li><strong>Java 7 &amp; Spring 4</strong> &ndash; both Java and Spring were upgraded to their latest production-ready versions for the active ongoing and coming Java/Spring projects.</li>
<li><strong>Symfony 2</strong> &ndash; we like this framework, because of its architectural resemblance to Spring. This allow us to apply the same architectural principles in our PHP projects. At this point we consider migrating all ongoing PHP projects from <a href="https://codeigniter.com/" title="CodeIngniter Web Framework">CodeIgniter</a> to <a href="https://symfony.com/" title="High-Performance PHP Framework">Symfony 2</a>. Consider checking out the <a href="https://www.buyandsell.ie/" title="Buy &amp; Sell - Ireland">Buy &amp; Sell</a> classifieds platform that Obecto had built entirely with <strong>Symfony 2</strong> from scratch in just about 4.5 months.</li>
</ul>


<!-- more -->




<div class="screenshot">
<img src="https://farm1.staticflickr.com/583/22165442906_3d239e36c3_o.png" width="640" height="640" title="Obecto Tech. Radar - November 2014" >
</div>


<ul>
<li><strong>Sails.js</strong> &ndash; <a href="http://sailsjs.org/" title="Enterprise-grade Node.js framework">Sails.js</a> has caught our attention for its conceptual succession from Rails and as a build-up on top of <a href="http://expressjs.com/" title="Express - Node.js web application framework">Express.js</a>. We do need something like this in order to streamline the execution of our Node.js projects. In the coming versions of the radar we&rsquo;ll share more deeper observations on the maturity of this framework and its tooling. Stay tuned!</li>
<li><strong>GitHub Flow</strong> &ndash; For simpler projects and simpler deployment setups, our team has found <a href="https://guides.github.com/introduction/flow/" title="Understanding the GitHub Flow">GitHub Flow</a> to be more appropriate and we use it as an alternative to the more disciplined and systematic branching and release models in <a href="http://nvie.com/posts/a-successful-git-branching-model/" title="A successful Git branching model">Git Flow</a>.</li>
<li><strong>Code Reviews</strong> &ndash; We have done code reviews on and off throughout the years. Time went by, our team continued to expand, and now this practice has become quite essential in our effort to share our craftsmanship mastery to the new members of the team. Furthermore, with <strong>code reviews</strong> we manage to distribute the knowledge in a project, to control the code quality for off-shore team members that are employed by our clients and to mitigate the related risks with that.</li>
<li><strong>Agile Documentation</strong> &ndash; Our understanding of what constitutes a product documentation and how to build it had evolved quite a lot. Originally, we used to base the product documentation on top of the requirement documents with a constant effort to keep things consistent in an ever-changing project with a dynamic backlog of user stories, tasks, epics and bug reports. As an alternative to this approach, we tried to organize the documentation around the most stable user stories and to document at the latest possible moment during a SCRUM sprint, when the functionality is finished, reviewed and deployed. Thus, we have a stable body of knowledge that reflects 100% accurately the end product, instead of being a mash-up between original intentions patched with description of the decision taken during development.</li>
</ul>


<p>Don&rsquo;t hesitate to contact me if you have questions regarding any dot on the Obecto tech. radar.</p>

<p>Keep in mind, this is a <strong>no comments</strong>-type of blog, because <a href="http://vladi.io/blog/2014/01/07/switching-off-comments/" title="Switching Off Comments">there are better ways to respond</a>.</p>
]]></content>
  </entry>
  
  <entry>
	<title type="html"><![CDATA[Building the First Obecto Technology Radar]]></title>
	<link href="http://npacemo.github.io/blog/2014/04/30/building-the-first-obecto-technology-radar/"/>
	<updated>2014-04-30T17:01:38+03:00</updated>
	<id>http://npacemo.github.io/blog/2014/04/30/building-the-first-obecto-technology-radar</id>
	<content type="html"><![CDATA[<p>This is a story of how overconfidence and being too skilled can sometimes cloud your judgement for the bigger picture. A story of how our company has managed to leave a train that was heading towards the end of its railroad. And how we learned to prevent that from happening again.</p>

<p>We started <a href="http://obecto.com" title="My Company">Obecto</a> at the fall of 2008. During the period of 2008-2012, we were particularly focused on growing our company&rsquo;s Flex expertise. For those that had never heard of Flex, this was a front-end technology developed by Adobe. It was comprised of a set of <strong>programming languages</strong> (ActionScript 3 and MXML), a <strong>byte-code execution environment</strong> (Flash &amp; AIR) and a very mature set of quite sophisticated <strong>SDK and frameworks</strong> (Eclipse-base IDE, debugger, profiler, Cairngorm, Parsley, RobotMVC, etc.) As we were growing our expertise we had our own share of contributions to the open source community, namely the <a href="https://code.google.com/p/flit/" title="FLit - a lightweight Flex for Flash Apps">FLit framework &mdash; a light-weight Flex for Flash Applications</a>, which was quite unique.</p>

<p>Our reputation and skill set grew to a point at which VMware trusted us to train over 80 of their finest engineers. We were also invited to taught Flex as a university course at the <em>Sofia University</em>&hellip;</p>

<blockquote><p><cite>We become so damn good at Flex/Flash, and the technology was so powerful <em>(even now the most popular Javascript frameworks are still not providing the same capabilities and levels of productivity)</em>, that our hubris blinded us from seeing the bigger picture and what was really happening in the technology world. We ignored all of the signs, even the total lack of support of Flash on the iOS devices and mobile in general, expecting it to be only temporary situation.</cite></p></blockquote>

<!-- more -->


<p>Flex was the answer to all of our needs &mdash; current and future &mdash; you name it: complex web applications, desktop applications and even a viable alternative to native mobile. Despite the unprecedented productivity and technology capabilities of Flex allowing the development of mind-blowing user interactions and user experiences, this technology was very quickly in decline. And it suddenly vanished one day, leaving our company with a portfolio of impressive projects done with a dead technology. We had to start basically from scratch to build a new portfolio that will set us apart and beyond the average software development studio. It took us almost 2 years to regain our reputation as experts in the field and rebuild our portfolio.</p>

<blockquote><p><cite>That thought us an important lesson! Technology companies need a process to continuously assess new technology and discuss potential future directions, while at the same time maintain sharp focus at the technologies offered as main platform choices to their customers.</cite></p></blockquote>

<p>As part of such process, at <a href="http://obecto.com" title="My Company">Obecto</a>, we decided to use a tool called <strong>Technology Radar</strong>. For those readers, unfamiliar with this tool and its concept, we suggest you to read <a href="http://nealford.com/memeagora/2013/05/28/build_your_own_technology_radar.html" title="Build Your Own Technology Radar">Build Your Own Technology Radar</a> <em>by Neil Ford</em>.</p>

<p>In short, the <strong>radar</strong> as <a href="http://www.thoughtworks.com/" title="ThoughtWorks corporate site">ThoughtWorks</a>, the company that invented it, defines it is:</p>

<blockquote><p><cite>&hellip;a document that sets out the changes that we think are currently interesting in software development &ndash; things in motion that we think you should pay attention to and consider using in your projects. It reflects the idiosyncratic opinion of a bunch of senior technologists based on our day-to-day work and experiences.<br/>
&mdash;&ndash; <strong>ThoughtWorks</strong>, <a href="http://www.thoughtworks.com/radar/faq" title="ThoughtWorks -- Technology Radar FAQ">Technology Radar &ndash; FAQ</a> </cite></p></blockquote>

<p>So let us present you our first version of the Obecto technology radar:</p>

<div class="screenshot">
<img src="https://farm1.staticflickr.com/442/20456936485_17a922efe2_o.png" width="640" height="640" title="Obecto Tech. Radar - April 2014" >
</div>


<p>The first edition of our radar marks few important moments:</p>

<ul>
<li><strong>Flash/Flex</strong> &ndash; our departure from Flex/Flash has completed and it has deserved its honourable place in the graveyard of good technologies. Nonetheless, we&rsquo;re still continuing to support a couple of AIR desktop applications for the pharmaceutical industry.</li>
<li><strong>Spring-Roo</strong> &ndash; even though <em>spring-roo</em> has saved us numerous hours of coding by generating the boilerplate and necessary plumbing for us, it has reached a point where projects that are using <em>spring-roo</em> are very difficult to maintain as tooling. The tooling behaves inconsistently across different versions and especially when combined with <strong>Eclipse STS</strong>. The <strong>Spring frameworks</strong> had matured to a level where we no longer need <em>spring-roo</em>. No new projects will be started with <em>spring-roo</em> and we already started an initiative to get rid of <em>spring-roo</em> from all active projects.</li>
<li><strong>Angular.JS</strong> &ndash; as we no longer relied on the use of <em>Flex/Flash</em> for building web applications, we have adopted <em>Dojo 1.8</em> as one of our core technologies for building SPA <em>(Single Page Applications)</em>. Since the beginning of the 2014 we have spotted <em>Angular.JS</em> as a better alternative to <em>Dojo</em> and since then it is in a process of active adoption in the organisation. All new web application projects are using <em>Angular.JS</em>.</li>
<li><strong>JSP/JSF</strong> &ndash; using server-side generated pages still has its place in certain solutions. But the JSF technology is not intended to be the most performing web technology. Also as an enterprise technology it relies on providing sufficient hardware to run it. There is always some room for performance optimization, but regardless of performance there are certain limitations when trying to implement more sophisticated interaction design and UX, such as applying the <strong>mobile-first</strong> technique.</li>
<li><strong>Node.js</strong> &ndash; after few successful pilot projects, we do believe in the pursuit of a <strong>full Javascript</strong> technology stack. One programming language used across all application layers. With some rough edges for operations and DevOps, it is time to put <em>Node.js</em> through a trial of several bit more complex projects.</li>
</ul>


<p>Don&rsquo;t hesitate to contact me if you have questions regarding any dot on the Obecto tech. radar.</p>

<p>Keep in mind, this is a <strong>no comments</strong>-type of blog, because <a href="http://vladi.io/blog/2014/01/07/switching-off-comments/" title="Switching Off Comments">there are better ways to respond</a>.</p>
]]></content>
  </entry>
  
  <entry>
	<title type="html"><![CDATA[Switching Off Comments]]></title>
	<link href="http://npacemo.github.io/blog/2014/01/07/switching-off-comments/"/>
	<updated>2014-01-07T22:56:33+02:00</updated>
	<id>http://npacemo.github.io/blog/2014/01/07/switching-off-comments</id>
	<content type="html"><![CDATA[<blockquote><p><cite>Anonymous blog comments, vapid video pranks, and lightweight mashups may seem trivial and harmless, but as a whole, this widespread practice of fragmentary, impersonal communication has demeaned interpersonal interaction.<br/>
&mdash;&ndash; <strong>Jason Lanier</strong>, You are not a Gadget. A Manifesto.</cite></p></blockquote>

<p>I realize I have never questioned the necessity of having a comments form in a blog. Somehow comments have always been inseparable part of my understanding of the concept of a blog. I hated the blogs and posts that had their comments disabled even though I leave comments rarely. When I&rsquo;ve started setting up this <a href="http://octopress.org/" title="Octopress - A blogging framework for hackers">Octopress</a> blog <strong><em>not using</em></strong> <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> was out of the question. Every blogger loves comments. Presumably they provide the reader with an almost instantaneous connection with the author and vice versa. And you&rsquo;re getting this emotional boost every time you receive an encouraging response. And the more comments I got the better I felt. So what changed my mind about comments&hellip;</p>

<!-- more -->


<p>It started with an annoying technical issue. As of time of writing <em>(Jan 8, 2014)</em> the <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> comments widgets was causing Google Chrome browsers on Mac OS X to freeze when attempting to load my blog <em>(and in fact any blog with a <a href="http://disqus.com/" title="Disqus - The Web's Community of Communities">Disqus</a> widget on it)</em> due to a browser-specific security constraint. If I wasn&rsquo;t that obsessive compulsive about having a consistently working blog on the major browsers I might have been able to live with that. But I imagined the situation of opening something in my favorite browser <em>(which is Firefox currently)</em> and getting a 100% reproducible freeze. I don&rsquo;t think I will open it again. That&rsquo;s a scary thought &ndash; to loose a reader because of a darn technical issue. So I had to switch off comments.</p>

<p>I felt really bad about this decision, so I had to fabricate some additional rational reasons. To my surprise these <em>additional reasons</em> were already adopted on a certain non-verbal level in my mind and I had to just step on it to put it in words. The more I think and I write about that, the more comfortable I feel about this decision. I&rsquo;m letting go of this juvenile desire for approval by the crowd and I no longer need to use my comments count as a social currency and quantification of the quality of my blog.</p>

<h2>The reasoning against comments</h2>

<ol>
<li><strong>Anonymity.</strong> I don&rsquo;t understand why would someone post anonymously unless being really in danger. Instead people use anonymity to detach the nasty things they type on their keyboards from their identity. It&rsquo;s defacing the conversation and stimulates behavior I don&rsquo;t want to be part of.</li>
<li><strong>Inarticulate responses.</strong> Comments rarely are the place where you can read a response that has took days or even an hour of reflection before the responder formulates his words. Usually, they express a basic primary reaction. It&rsquo;s like a shout in a room full of people. It doesn&rsquo;t contribute much to the presented material and it&rsquo;s a relatively poor attempt at establishing a connection. I&rsquo;m longing for a deeper relationship. Take for example the way the life-long conversation between Carl Jung and Sigmund Freud was depicted in <a href="http://www.imdb.com/title/tt1571222/" title="A Dangerous Method (2011) - IMDb">A Dangerous Method (2011)</a>. I&rsquo;ve been fascinated by the intensity and especially the civility and great mutual respect in this relationship. I&rsquo;m sure I&rsquo;ll be able to find many such examples where great minds have been able to keep alive a correspondence of enormous value and beauty, but this rarely happens in the form of exchanging few comments at the bottom part of a blog post.</li>
<li><strong>Unproductive controversy.</strong> I don&rsquo;t mind someone expressing a strong disagreement. Sometimes titles are designed to be provocative. But I do mind against controversy in the lines of Mac vs. PC, C# vs. Java, OOP vs. Functional, Vim vs. Emacs, Comments Off vs. Comments On etc. Often <em>(but not always)</em> such controversy is unproductive and shallow.</li>
<li><strong>The need for moderation.</strong> Moderation is an overhead activity that I would be happy not to do. Keeping the comments clean of spam and irrelevant comments is a distractive task I want to avoid.</li>
</ol>


<h2>Better ways to respond</h2>

<p>Switching off comments doesn&rsquo;t mean I want to prevent any kind of conversation happening. On the contrary, I want the conversations to be deeper, more personal instead of fragmentary and impersonal.</p>

<p>In case you have read a post here and you want to reply, you can do the following:</p>

<ol>
<li><strong>Blog about it.</strong> Writing is tough. Finding the right words is tough. But when the magic happens, the effects of a good blog post could pay you back in the long-term. Please, don&rsquo;t forget to let me know about your post. You can do this via email or a tweet.</li>
<li><strong>Reply on Twitter.</strong> You can either use the &lsquo;Tweet&rsquo;-button at the bottom of an article, or tweet to <a href="http://twitter.com/npacemo" title="Follow me on Twitter">my Twitter account (@npacemo)</a>.</li>
<li><strong>Email me.</strong> You can find my contacts on the <a href="http://npacemo.github.io/about" title="About Vladimir Tsvetkov">About</a> page.</li>
</ol>


<p>Let&rsquo;s push it harder for some next level conversations!</p>
]]></content>
  </entry>
  
  <entry>
	<title type="html"><![CDATA[Return to the Habit of Recording and Sharing What I Learn]]></title>
	<link href="http://npacemo.github.io/blog/2014/01/04/return-to-the-habit-of-recording-and-sharing-what-i-learn/"/>
	<updated>2014-01-04T12:44:42+02:00</updated>
	<id>http://npacemo.github.io/blog/2014/01/04/return-to-the-habit-of-recording-and-sharing-what-i-learn</id>
	<content type="html"><![CDATA[<p>During my Christmas vacation I was spending some time thinking about and exploring ways how to inspire my team at <a href="http://www.obecto.com/" title="Obecto - Boutique Software Development Company">Obecto</a> to expand its learning bandwidth. This has led me somehow to the <a href="http://manifesto.softwarecraftsmanship.org/#/en" title="Manifesto for Software Craftsmanship">Software Craftsmanship Manifesto</a> and then to the <a href="http://manifesto.softwarecraftsmanship.org/#/en/reading" title="Software Craftsmanship - Background Materials">Further Reading Materials</a> where I have found the online version of the <a href="http://chimera.labs.oreilly.com/books/1234000001813/index.html" title="Apprenticeship Patterns">Apprenticeship Patterns Book</a>. This book has caught my attention right from the start and in the next few days I felt the necessity to read the whole book.</p>

<p>Reading it led me to inspiration <em>(one result of that is me spending the last 2 days of my vacation to setup and start this blog, and also writing this article)</em> and many ideas about initiatives and ways to approach the learning process within my team. But more importantly, it helped me reignite and start <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#nurture_your_passion" title="Apprenticeship Patterns &gt; Chapter 3 &gt; Nurture Your Passion">nurturing my passion</a> for the craft again. It led me to some important reflections and it reminded me about my <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#the_long_road" title="Apprenticeship Patterns &gt; Chapter 3 &gt; The Long Road">long road</a>.</p>

<!-- more -->


<h2>Important reflections and realizations</h2>

<ol>
<li><strong>I need to regain the <em>sense of control</em> and responsibility for my learning process.</strong> It&rsquo;s not that I&rsquo;m not doing any learning&hellip; Looking at 2013 in retrospect, I&rsquo;ve been involved in quite a lot of learning activities. I attended a <a href="http://fmi.clojure.bg/" title="Programming in Clojure">Clojure programming</a> course at the Sofia University. I didn&rsquo;t finished the course, but managed to pull it through the 60% of the course curriculum and home work assignments. Roughly, at the same time I&rsquo;ve enrolled the <a href="https://www.coursera.org/course/progfun" title="Functional Programming Principles in Scala | Coursera">Functional Programming Principles in Scala</a> course at <a href="https://www.coursera.org/" title="Coursera">Coursera</a>. Again and sadly, I didn&rsquo;t finished the course and I haven&rsquo;t submitted the Week 6 and Week 7 assignments on time. I realise now that both of these learning efforts were not-that-well-thought-through attempts to <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#expand_your_bandwidth" title="Apprenticeship Patterns &gt; Chapter 5 &gt; Expand Your Bandwidth">expand my bandwidth</a>. Both of them failed because they didn&rsquo;t fit into a <strong>sustainable learning strategy</strong> that was considering realistically how much time and energy I&rsquo;m investing in my companies. My projects at that time entered a phase that required 110% of my attention and I had to assign low priority to my learning activities&hellip; And this is how my <em>deliberate learning</em> for 2013 just ceased. Both my Clojure and Scala skills now would take some considerable time to recover. But again recovering those would be in vain if I don&rsquo;t spend some time to <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#draw_your_own_map" title="Apprenticeship Patterns &gt; Chapter 3 &gt; Draw Your Own Map">draw my own map</a> and see where does, for example, the skill of Clojure programming fits into my overall career strategy. The <a href="http://chimera.labs.oreilly.com/books/1234000001813/index.html" title="Apprenticeship Patterns">Apprenticeship Patterns Book</a> helped me realize that from now I should strive not just to spend time on learning new and interesting stuff, but rather approach learning in a way more systematic fashion by implementing a whole micro-architecture of related learning patterns,  supporting practices and even habits.</li>
<li><strong>Lots of reusable and transferable knowledge I&rsquo;ve lost unrecorded.</strong> I have lost the count of how many times I&rsquo;ve decided that there&rsquo;s no time to record a lessons I&rsquo;ve learned. And later I run repeatedly into a situation where I have to either learn the same lesson again or I have to recollect the details of a solution by digging really deep into my faded memories. Sometimes it is something as small as a specific shell command that is useful in a certain situation, but sometimes it is something bigger such as a non-obvious architectural solution that takes into consideration a number of undocumented technical constraints. In all of these situations I have to invest a lot of effort. I feel especially bad when I recall <a href="http://c2.com/cgi/wiki?LarryWall" title="Larry Wall">Larry Wall</a> who encourages every programmer to develop the <a href="http://c2.com/cgi/wiki?LazinessImpatienceHubris" title="Laziness Impatience Hubris">three great virtues</a> of our craft: <em>laziness, impatience, and hubris</em>. He says about <strong><em>laziness</em></strong>, <em>&ldquo;that this is the quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful, and document what you wrote so you don&rsquo;t have to answer so many questions about it. Hence, the first great virtue of a programmer.&rdquo;</em> It&rsquo;s unrealistic to expect that I&rsquo;ll be able to record absolutely all lessons I&rsquo;m learning in my everyday work, but now I&rsquo;m determined to record as much as I can. Hacking this blog together is a step forwards in the way of achieving this goal. I used to have a blog, you know, with articles mostly on <em>Flash and Flex</em> <em>(which is no longer accessible &ndash; <a href="http://npacemo.com/">http://npacemo.com/</a>)</em>, and it was popular enough for me to feel that I&rsquo;m doing a decent job with it. Gradually I was writing less and less frequently, until I totally stopped and the content in my blog eventually became irrelevant. My point is <em>if I fail to form the habit of <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#record_what_you_learn" title="Apprenticeship Patterns &gt; Chapter 5 &gt; Record What You Learn">recording what you learn</a></em> this blog will most likely fall into the steps of my former one. Currently, I&rsquo;m learning more and more about habit formation and this gives me a bit more confidence.</li>
<li><strong>Taking a <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#a_different_road" title="Apprenticeship Patterns &gt; Chapter 3 &gt; A Different Road">different road</a> doesn&rsquo;t mean I&rsquo;ve lost <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#the_long_road" title="Apprenticeship Patterns &gt; Chapter 3 &gt; The Long Road">my long road</a>.</strong> My <em>long road</em> was and I believe it is still all about the <strong><em>software development</em></strong> part of bringing a software product or service to life. The steps that I have taken so far were quite focused on gaining the special skills needed to become a <em>great programmer</em>. No matter what role(s) and responsibilities I was exercising in my projects I was always capable <em>(and probably I still am)</em> to switch to <em>programming mode</em>, to get into this flow and be able to put to the deepest corner of my head the fact that I&rsquo;m also a <em>VP Engineering</em> for <a href="http://www.obecto.com/" title="Obecto - Boutique Software Development Company">my company</a>. Now when the company has grown over a certain number of team members, customers and projects, I realize that switching into <em>programming mode</em> would not only be very hard for me <em>(because I need to cope with this variety of different attitudes and modes of behavior)</em>, but it would also harm the growth of my company. Now is the time for me to focus 100% on <em>the tasks of platform selection, technical design and optimizing the development processes for this selection and technology choices, managing the process of organizing and synchronizing the requirements, managing the teams, properly allocating people, growing team leaders and technical leaders, and make sure all projects succeed in execution</em>. In short, I need to totally own the <strong><em>development methodology</em></strong> instead of showing off my programming skills. At a later stage, I&rsquo;m pretty sure I&rsquo;ll get back to the craft of programming and even become a better programmer than I have ever been, but for now I&rsquo;m on a <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch03.html#a_different_road" title="Apprenticeship Patterns &gt; Chapter 3 &gt; A Different Road">different road</a>.</li>
</ol>


<h2>Next steps</h2>

<ol>
<li><strong>Present the ideas from <a href="http://chimera.labs.oreilly.com/books/1234000001813/index.html" title="Apprenticeship Patterns">Apprenticeship Patterns</a> to my team.</strong></li>
<li><strong>Continue to <a href="http://chimera.labs.oreilly.com/books/1234000001813/ch05.html#record_what_you_learn" title="Apprenticeship Patterns &gt; Chapter 5 &gt; Record What You Learn">record what I learn</a> in this blog, in my company Wiki and in the projects Wikis, and in my analog journal, and try to turn this into a habit.</strong></li>
</ol>

]]></content>
  </entry>
  
</feed>
